apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong
  labels:
    app: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong
  template:
    metadata:
      labels:
        app: kong
    spec:
      containers:
        - name: kong
          image: kong:3.7
          ports:
            - containerPort: 8000
            - containerPort: 8443
            - containerPort: 8001
            - containerPort: 8444
            - containerPort: 8002
            - containerPort: 8445
            - containerPort: 8003
            - containerPort: 8004
          env:
            - name: KONG_DATABASE
              value: "postgres"
            - name: KONG_PG_HOST
              value: "postgres-service"  # Corrigido para nome do serviço correto
            - name: KONG_PG_DATABASE
              value: "kong"
            - name: KONG_PG_USER
              value: "kong"
            - name: KONG_PG_PASSWORD
              value: "kong"
            - name: KONG_DECLARATIVE_CONFIG
              value: "/k8s/kong.yaml"
            - name: KONG_PROXY_ACCESS_LOG
              value: "/dev/stdout"
            - name: KONG_ADMIN_ACCESS_LOG
              value: "/dev/stdout"
            - name: KONG_PROXY_ERROR_LOG
              value: "/dev/stderr"
            - name: KONG_ADMIN_ERROR_LOG
              value: "/dev/stderr"
            - name: KONG_ADMIN_LISTEN
              value: "0.0.0.0:8001"
            - name: KONG_ADMIN_GUI_URL
              value: "http://localhost:8002"
          volumeMounts:
            - name: kong-config
              mountPath: "/kong/declarative"
      volumes:
        - name: kong-config
          configMap:
            name: kong-declarative-config

---

apiVersion: v1
kind: Service
metadata:
  name: kong-service
spec:
  type: LoadBalancer  # Expondo para a internet
  selector:
    app: kong
  ports:
    - name: proxy
      port: 8000
      targetPort: 8000
    - name: admin
      port: 8001
      targetPort: 8001
    - name: gui
      port: 8002
      targetPort: 8002

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13-alpine
          env:
            - name: POSTGRES_DB
              value: "kong"
            - name: POSTGRES_USER
              value: "kong"
            - name: POSTGRES_PASSWORD
              value: "kong"
          ports:
            - containerPort: 5432
          livenessProbe:
            exec:
              command: ["pg_isready", "-d", "kong", "-U", "kong"]
            initialDelaySeconds: 30
            periodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432

---

apiVersion: batch/v1
kind: Job
metadata:
  name: kong-migrations
spec:
  template:
    spec:
      containers:
        - name: kong-migrations
          image: kong:3.7
          command: ["kong", "migrations", "bootstrap"]
          env:
            - name: KONG_DATABASE
              value: "postgres"
            - name: KONG_PG_HOST
              value: "postgres-service"  # Correção do nome do serviço
            - name: KONG_PG_DATABASE
              value: "kong"
            - name: KONG_PG_USER
              value: "kong"
            - name: KONG_PG_PASSWORD
              value: "kong"
      restartPolicy: Never
  backoffLimit: 4
